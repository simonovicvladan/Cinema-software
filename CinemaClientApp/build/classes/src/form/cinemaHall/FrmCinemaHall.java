/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.cinemaHall;

import controller.Controller;
import domain.CinemaHall;
import domain.CinemaHallType;
import form.FrmMode;
import form.cinemaHall.model.TableModelHall;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import session.Session;

/**
 *
 * @author Vladan Simonovic
 */
public class FrmCinemaHall extends javax.swing.JDialog {

    /**
     * Creates new form FrmCinemaHall
     *
     * @param parent
     */
    public FrmCinemaHall(java.awt.Frame parent, boolean modal, FrmMode mode) {
        super(parent, modal);
        initComponents();
        setCentered();
        adjustForm(mode);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCurrentUser = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblCurrentUser = new javax.swing.JLabel();
        pnlCinemaHall = new javax.swing.JPanel();
        lblCinemaHallID = new javax.swing.JLabel();
        txtCinemaHall = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtNumberOfSeats = new javax.swing.JTextField();
        btnAddHall = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        pnlTableHalls = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHalls = new javax.swing.JTable();
        btnClose = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnSaveCinemaHall = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlCurrentUser.setBorder(javax.swing.BorderFactory.createTitledBorder("User"));

        jLabel1.setText("Current user:");

        lblCurrentUser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCurrentUser.setForeground(new java.awt.Color(51, 0, 204));

        javax.swing.GroupLayout pnlCurrentUserLayout = new javax.swing.GroupLayout(pnlCurrentUser);
        pnlCurrentUser.setLayout(pnlCurrentUserLayout);
        pnlCurrentUserLayout.setHorizontalGroup(
            pnlCurrentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCurrentUserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lblCurrentUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlCurrentUserLayout.setVerticalGroup(
            pnlCurrentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCurrentUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCurrentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblCurrentUser))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pnlCinemaHall.setBorder(javax.swing.BorderFactory.createTitledBorder("Cinema hall"));

        lblCinemaHallID.setText("Cinema hall ID:");

        txtCinemaHall.setEditable(false);

        jLabel3.setText("Name:");

        jLabel4.setText("Hall type:");

        cmbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Number of seats:");

        btnAddHall.setText("Add hall");
        btnAddHall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHallActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove hall");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        pnlTableHalls.setBorder(javax.swing.BorderFactory.createTitledBorder("Table halls"));

        tblHalls.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblHalls);

        javax.swing.GroupLayout pnlTableHallsLayout = new javax.swing.GroupLayout(pnlTableHalls);
        pnlTableHalls.setLayout(pnlTableHallsLayout);
        pnlTableHallsLayout.setHorizontalGroup(
            pnlTableHallsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableHallsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTableHallsLayout.setVerticalGroup(
            pnlTableHallsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableHallsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlCinemaHallLayout = new javax.swing.GroupLayout(pnlCinemaHall);
        pnlCinemaHall.setLayout(pnlCinemaHallLayout);
        pnlCinemaHallLayout.setHorizontalGroup(
            pnlCinemaHallLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCinemaHallLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCinemaHallLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTableHalls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlCinemaHallLayout.createSequentialGroup()
                        .addGroup(pnlCinemaHallLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCinemaHallID)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCinemaHallLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCinemaHall, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNumberOfSeats)
                            .addComponent(cmbType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlCinemaHallLayout.createSequentialGroup()
                        .addComponent(btnAddHall)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemove)))
                .addContainerGap())
        );
        pnlCinemaHallLayout.setVerticalGroup(
            pnlCinemaHallLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCinemaHallLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCinemaHallLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCinemaHallID)
                    .addComponent(txtCinemaHall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCinemaHallLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCinemaHallLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCinemaHallLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNumberOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCinemaHallLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddHall)
                    .addComponent(btnRemove))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlTableHalls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(51, 51, 51))
        );

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSaveCinemaHall.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnSaveCinemaHall.setForeground(new java.awt.Color(0, 153, 51));
        btnSaveCinemaHall.setText("Save all Cinema halls");
        btnSaveCinemaHall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCinemaHallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCinemaHall, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCurrentUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addGap(18, 18, 18)
                        .addComponent(btnSaveCinemaHall)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCurrentUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlCinemaHall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose)
                    .addComponent(btnCancel)
                    .addComponent(btnSaveCinemaHall))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddHallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHallActionPerformed
        String name = txtName.getText().trim();
        String strNoOfSeats = txtNumberOfSeats.getText();
        if (name.isEmpty() || strNoOfSeats.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are required! Check input.", "Add hall error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Integer numberOfSeats = Integer.parseInt(strNoOfSeats);
            if (numberOfSeats <= 0) {
                JOptionPane.showMessageDialog(this, "Number of seats must be positive!", "Add hall error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            CinemaHallType type = (CinemaHallType) cmbType.getSelectedItem();
            CinemaHall hall = new CinemaHall(0L, name, type, numberOfSeats);
            TableModelHall model = (TableModelHall) tblHalls.getModel();
            model.add(hall);
        } catch (Exception e) {
            if (e instanceof NumberFormatException) {
                JOptionPane.showMessageDialog(this, "Number of seats must be an integer!", "Add hall error", JOptionPane.ERROR_MESSAGE);
            } else {
                System.out.println(e.getMessage());
            }
            return;
        }
        
    }//GEN-LAST:event_btnAddHallActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int selectedRow = tblHalls.getSelectedRow();
        if (selectedRow != -1) {
            TableModelHall model = (TableModelHall) tblHalls.getModel();
            model.remove(selectedRow);
        } else {
            JOptionPane.showMessageDialog(this, "Row is not selected!", "Remove hall error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnSaveCinemaHallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCinemaHallActionPerformed
        TableModelHall model = (TableModelHall) tblHalls.getModel();
        if (model.getHalls().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No cinema halls to save. At least one hall is required.",
                    "Save error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        List<CinemaHall> halls = model.getHalls();
        try {
            halls = Controller.getInstance().saveAllHalls(halls);
            model.setHalls(halls);
            JOptionPane.showMessageDialog(this, "All cinema halls are successfully saved!", "Successful save", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Unsuccessful save", "Save error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSaveCinemaHallActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit? Previous work won't be saved.", "Question", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            TableModelHall model = (TableModelHall) tblHalls.getModel();
            model.setHalls(new ArrayList<>());
            dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddHall;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSaveCinemaHall;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCinemaHallID;
    private javax.swing.JLabel lblCurrentUser;
    private javax.swing.JPanel pnlCinemaHall;
    private javax.swing.JPanel pnlCurrentUser;
    private javax.swing.JPanel pnlTableHalls;
    private javax.swing.JTable tblHalls;
    private javax.swing.JTextField txtCinemaHall;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumberOfSeats;
    // End of variables declaration//GEN-END:variables

    private void setCurrentUser() {
        lblCurrentUser.setText(Session.getInstance().getCurrentUser().toString());
    }

    private void adjustForm(FrmMode mode) {
        setCurrentUser();
        populateCmbType();

        switch (mode) {
            case NEW:
                lblCinemaHallID.setVisible(false);
                txtCinemaHall.setVisible(false);

                txtName.setEditable(true);
                txtNumberOfSeats.setEditable(true);
                btnSaveCinemaHall.setVisible(true);
                btnClose.setVisible(false);

                cmbType.setEditable(true);

                tblHalls.setVisible(true);
                setTitle("New cinema hall");
                TableModelHall model = new TableModelHall(new ArrayList<>());
                tblHalls.setModel(model);
                break;

            case VIEW:

                tblHalls.setVisible(false);

                lblCinemaHallID.setVisible(true);
                txtCinemaHall.setVisible(true);

                txtName.setEditable(false);
                txtNumberOfSeats.setEditable(false);

                cmbType.setEnabled(false);
                pnlTableHalls.setVisible(false);
                btnSaveCinemaHall.setVisible(false);
                btnAddHall.setVisible(false);
                btnRemove.setVisible(false);

                btnClose.setVisible(true);
                btnCancel.setVisible(false);
                
                setTitle("View cinema hall");
                setHall();
                break;
        }
    }

    private void setCentered() {
        setLocationRelativeTo(null);
    }

    private void populateCmbType() {
        cmbType.removeAllItems();
        for (CinemaHallType type : CinemaHallType.values()) {
            cmbType.addItem(type);
        }
    }

    private void setHall() {
        // check if map contains hallID
        CinemaHall hall = (CinemaHall) Session.getInstance().getUseCaseParams().get("hallID");
        try {

            viewHall(hall);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void viewHall(CinemaHall hall) {

        txtCinemaHall.setText(String.valueOf(hall.getCinemaHallID()));
        txtName.setText(hall.getName());
        txtNumberOfSeats.setText(String.valueOf(hall.getNumberOfSeats()));
        cmbType.setSelectedItem(hall.getType() == null ? null : hall.getType());
    }
}
